===> 2019-02-11 09:38:49.97 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 09:38:54.37 +01:00 [Information] Creating key {0d7c537f-71e8-4c76-b98d-3465a22e85b8} with creation date 2019-02-11 08:38:54Z, activation date 2019-02-11 08:38:50Z, and expiration date 2019-05-12 08:38:50Z.
===> 2019-02-11 09:38:55.60 +01:00 [Information] Writing data to file '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys\key-0d7c537f-71e8-4c76-b98d-3465a22e85b8.xml"'.
===> 2019-02-11 09:42:58.43 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 09:43:02.02 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:5d615e37-6a67-48e6-9e43-88d818c612f5
Error Number:18456,State:1,Class:14
===> 2019-02-11 09:43:03.45 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 09:43:03.67 +01:00 [Information] Request finished in 223.1929ms 500 text/html; charset=utf-8
===> 2019-02-11 09:44:28.66 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 09:46:15.76 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 09:47:42.60 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 09:56:23.69 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 09:56:26.55 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:e6d755c9-46e5-4758-ad48-196aac12bf4c
Error Number:18456,State:1,Class:14
===> 2019-02-11 09:56:28.34 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 09:56:28.35 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 09:56:28.78 +01:00 [Information] Request finished in 424.6607ms 500 text/html; charset=utf-8
===> 2019-02-11 09:56:28.80 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 09:56:29.34 +01:00 [Information] Request finished in 555.6736ms 500 text/html; charset=utf-8
===> 2019-02-11 09:56:29.48 +01:00 [Error] Connection id ""0HLKFVR7GAHI0"", Request id ""0HLKFVR7GAHI0:00000001"": An unhandled exception was thrown by the application.
System.ObjectDisposedException: Cannot write to the response body, the response has completed.
Object name: 'HttpResponseStream'.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.ValidateState(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)
   at System.IO.StreamWriter.Write(String value)
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.ExecuteAsync()
   at Microsoft.Extensions.RazorViews.BaseView.ExecuteAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
===> 2019-02-11 09:56:29.60 +01:00 [Information] Request finished in 1254.9377ms 500 
===> 2019-02-11 09:56:41.79 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 09:56:41.80 +01:00 [Information] Request finished in 15.6465ms 500 text/html; charset=utf-8
===> 2019-02-11 09:56:52.84 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/favicon.ico  
===> 2019-02-11 09:56:52.86 +01:00 [Information] Request finished in 12.3795ms 500 text/html; charset=utf-8
===> 2019-02-11 10:25:15.81 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:27:46.06 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:30:41.46 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:31:28.07 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:33:42.29 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:35:16.73 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:36:24.69 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:43:45.74 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 10:43:47.82 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:9776e638-2fd3-4c60-be65-6e0cc20e7bbb
Error Number:18456,State:1,Class:14
===> 2019-02-11 10:43:48.97 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 10:43:48.97 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 10:43:49.11 +01:00 [Error] Connection id ""0HLKG0LM6BSA7"", Request id ""0HLKG0LM6BSA7:00000001"": An unhandled exception was thrown by the application.
System.OverflowException: Arithmetic operation resulted in an overflow.
   at System.IO.StreamWriter.Write(String value)
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.ExecuteAsync()
   at Microsoft.Extensions.RazorViews.BaseView.ExecuteAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
===> 2019-02-11 10:43:49.15 +01:00 [Information] Request finished in 183.8181ms 500 text/html; charset=utf-8
===> 2019-02-11 10:43:49.11 +01:00 [Error] Connection id ""0HLKG0LM6BSA8"", Request id ""0HLKG0LM6BSA8:00000001"": An unhandled exception was thrown by the application.
System.OverflowException: Arithmetic operation resulted in an overflow.
   at System.IO.StreamWriter.Write(String value)
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.ExecuteAsync()
   at Microsoft.Extensions.RazorViews.BaseView.ExecuteAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
===> 2019-02-11 10:43:49.15 +01:00 [Information] Request finished in 189.7046ms 500 
===> 2019-02-11 10:43:49.15 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 10:43:49.19 +01:00 [Information] Request finished in 35.3429ms 500 text/html; charset=utf-8
===> 2019-02-11 10:43:49.19 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 10:43:49.20 +01:00 [Information] Request finished in 8.9465ms 500 text/html; charset=utf-8
===> 2019-02-11 10:43:49.20 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 10:43:49.21 +01:00 [Information] Request finished in 9.6501ms 500 text/html; charset=utf-8
===> 2019-02-11 10:43:49.21 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 10:43:49.24 +01:00 [Information] Request finished in 33.179ms 500 text/html; charset=utf-8
===> 2019-02-11 10:55:17.80 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 10:55:17.97 +01:00 [Information] Request finished in 172.448ms 500 text/html; charset=utf-8
===> 2019-02-11 10:55:24.07 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/favicon.ico  
===> 2019-02-11 10:55:24.09 +01:00 [Information] Request finished in 13.3196ms 500 text/html; charset=utf-8
===> 2019-02-11 11:42:20.74 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 11:45:14.64 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 11:46:10.77 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 11:48:08.89 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 11:48:13.56 +01:00 [Fatal] Application startup exception
System.InvalidOperationException: Unable to find the required services. Please add all the required services by calling 'IServiceCollection.AddHangfire' inside the call to 'ConfigureServices(...)' in the application startup code.
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
===> 2019-02-11 11:48:21.29 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 11:48:22.81 +01:00 [Information] Request finished in 1513.1511ms 500 text/html; charset=utf-8
===> 2019-02-11 11:51:31.66 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 11:55:24.68 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 11:56:35.08 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 11:56:36.89 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:00d059cb-0f9a-4be0-bad9-28acb30473a1
Error Number:18456,State:1,Class:14
===> 2019-02-11 11:56:38.33 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 11:56:38.37 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 11:56:38.58 +01:00 [Information] Request finished in 257.2154ms 500 text/html; charset=utf-8
===> 2019-02-11 11:56:38.59 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 11:56:38.60 +01:00 [Information] Request finished in 11.3384ms 500 text/html; charset=utf-8
===> 2019-02-11 11:56:38.77 +01:00 [Error] Connection id ""0HLKG1UCBIFQR"", Request id ""0HLKG1UCBIFQR:00000001"": An unhandled exception was thrown by the application.
System.ObjectDisposedException: Cannot write to the response body, the response has completed.
Object name: 'HttpResponseStream'.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.ValidateState(CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)
   at System.IO.StreamWriter.Write(String value)
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.ExecuteAsync()
   at Microsoft.Extensions.RazorViews.BaseView.ExecuteAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
===> 2019-02-11 11:56:38.92 +01:00 [Information] Request finished in 579.8933ms 500 text/html; charset=utf-8
===> 2019-02-11 11:56:51.64 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 11:56:51.66 +01:00 [Information] Request finished in 11.4573ms 500 text/html; charset=utf-8
===> 2019-02-11 11:56:58.10 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/favicon.ico  
===> 2019-02-11 11:56:58.12 +01:00 [Information] Request finished in 14.8184ms 500 text/html; charset=utf-8
===> 2019-02-11 12:18:28.35 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 12:33:21.52 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 12:33:33.84 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:b50c8733-7420-4135-b824-08d0609b0d18
Error Number:18456,State:1,Class:14
===> 2019-02-11 12:33:36.39 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 12:33:36.72 +01:00 [Information] Request finished in 327.9663ms 500 text/html; charset=utf-8
===> 2019-02-11 12:34:23.87 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 12:34:23.93 +01:00 [Information] Request finished in 63.6949ms 500 text/html; charset=utf-8
===> 2019-02-11 12:34:38.03 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/favicon.ico  
===> 2019-02-11 12:34:38.04 +01:00 [Information] Request finished in 10.2977ms 500 text/html; charset=utf-8
===> 2019-02-11 12:53:01.27 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 12:54:40.63 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 12:54:41.54 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:30033826-2d7f-488d-991c-319ac3c66612
Error Number:18456,State:1,Class:14
===> 2019-02-11 12:54:42.09 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 12:54:42.18 +01:00 [Information] Request finished in 97.4647ms 500 text/html; charset=utf-8
===> 2019-02-11 12:59:33.81 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 12:59:54.43 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 12:59:54.87 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Login failed for user 'sa'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:0ef944b7-f78b-46b1-9cbd-5dc13ce5fe0e
Error Number:18456,State:1,Class:14
===> 2019-02-11 12:59:55.25 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 12:59:55.28 +01:00 [Information] Request finished in 34.8232ms 500 text/html; charset=utf-8
===> 2019-02-11 13:00:01.46 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:00:01.61 +01:00 [Information] Request finished in 148.032ms 500 text/html; charset=utf-8
===> 2019-02-11 13:00:03.95 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/favicon.ico  
===> 2019-02-11 13:00:03.96 +01:00 [Information] Request finished in 12.4616ms 500 text/html; charset=utf-8
===> 2019-02-11 13:01:23.73 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:02:07.42 +01:00 [Fatal] Application startup exception
System.Data.SqlClient.SqlException (0x80131904): Cannot open database "HangFireDb" requested by the login. The login failed.
Login failed for user 'therapy'.
   at System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling)
   at System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   at System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   at System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   at System.Data.SqlClient.SqlConnection.Open()
   at Hangfire.SqlServer.SqlServerStorage.CreateAndOpenConnection()
   at Hangfire.SqlServer.SqlServerStorage.UseConnection[T](DbConnection dedicatedConnection, Func`2 func)
   at Hangfire.SqlServer.SqlServerStorage.UseConnection(DbConnection dedicatedConnection, Action`1 action)
   at Hangfire.SqlServer.SqlServerStorage.Initialize()
   at Hangfire.SqlServerStorageExtensions.UseSqlServerStorage(IGlobalConfiguration configuration, String nameOrConnectionString)
   at VoucherService.Startup.<ConfigureServices>b__4_0(IGlobalConfiguration config) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 45
   at Hangfire.HangfireServiceCollectionExtensions.<>c__DisplayClass0_0.<AddHangfire>b__9(IServiceProvider serviceProvider)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScoped(ScopedCallSite scopedCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitSingleton(SingletonCallSite singletonCallSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(IServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass1_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetService[T](IServiceProvider provider)
   at Hangfire.HangfireApplicationBuilderExtensions.ThrowIfNotConfigured(IApplicationBuilder app)
   at Hangfire.HangfireApplicationBuilderExtensions.UseHangfireServer(IApplicationBuilder app, BackgroundJobServerOptions options, IEnumerable`1 additionalProcesses, JobStorage storage)
   at VoucherService.Startup.Configure(IApplicationBuilder app, IHostingEnvironment env, ILoggerFactory loggerFactory) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Startup.cs:line 131
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Hosting.ConventionBasedStartup.Configure(IApplicationBuilder app)
   at Microsoft.AspNetCore.Server.IISIntegration.IISSetupFilter.<>c__DisplayClass4_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.HostFilteringStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder app)
   at Microsoft.AspNetCore.Hosting.Internal.AutoRequestServicesStartupFilter.<>c__DisplayClass0_0.<Configure>b__0(IApplicationBuilder builder)
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
ClientConnectionId:147a51b7-7ba4-4863-814c-3f98b9e9e889
Error Number:4060,State:1,Class:11
===> 2019-02-11 13:02:08.02 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 13:02:08.02 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:02:08.09 +01:00 [Information] Request finished in 71.7022ms 500 
===> 2019-02-11 13:02:08.18 +01:00 [Information] Request finished in 155.5362ms 500 text/html; charset=utf-8
===> 2019-02-11 13:05:06.07 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:05:09.48 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 13:05:15.58 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 13:05:15.67 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 13:05:15.68 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 13:05:15.68 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 13:05:15.68 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 13:05:15.68 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 13:05:15.68 +01:00 [Information]     Worker count: 10
===> 2019-02-11 13:05:15.68 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 13:05:15.68 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 13:05:15.68 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 13:05:16.80 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 13:05:16.80 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:05:17.41 +01:00 [Information] Request finished in 606.09ms 200 
===> 2019-02-11 13:07:46.92 +01:00 [Warning] Failed to determine the https port for redirect.
===> 2019-02-11 13:08:15.94 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:08:19.08 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 13:08:20.30 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 13:08:20.38 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 13:08:20.39 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 13:08:20.40 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 13:08:20.40 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 13:08:20.40 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 13:08:20.40 +01:00 [Information]     Worker count: 10
===> 2019-02-11 13:08:20.40 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 13:08:20.40 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 13:08:20.40 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 13:08:21.89 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 13:08:21.93 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:08:22.35 +01:00 [Information] Request finished in 468.8728ms 200 
===> 2019-02-11 13:08:23.40 +01:00 [Warning] Failed to determine the https port for redirect.
===> 2019-02-11 13:08:25.42 +01:00 [Information] Route matched with "{action = \"Get\", controller = \"Values\"}". Executing action "VoucherService.Controllers.ValuesController.Get (VoucherService)"
===> 2019-02-11 13:08:25.49 +01:00 [Information] Executing action method "VoucherService.Controllers.ValuesController.Get (VoucherService)" - Validation state: Valid
===> 2019-02-11 13:08:25.50 +01:00 [Information] Executed action method "VoucherService.Controllers.ValuesController.Get (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 0.7532ms.
===> 2019-02-11 13:08:25.58 +01:00 [Information] Executing ObjectResult, writing value of type '"System.String[]"'.
===> 2019-02-11 13:08:26.17 +01:00 [Information] Executed action "VoucherService.Controllers.ValuesController.Get (VoucherService)" in 460.2201ms
===> 2019-02-11 13:08:26.23 +01:00 [Information] Request finished in 4302.5772ms 200 application/json; charset=utf-8
===> 2019-02-11 13:08:35.77 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/favicon.ico  
===> 2019-02-11 13:08:35.94 +01:00 [Information] Request finished in 168.1856ms 404 
===> 2019-02-11 13:09:42.13 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:09:44.06 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 13:09:44.24 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 13:09:44.28 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 13:09:44.29 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 13:09:44.29 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 13:09:44.29 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 13:09:44.29 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 13:09:44.29 +01:00 [Information]     Worker count: 10
===> 2019-02-11 13:09:44.29 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 13:09:44.29 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 13:09:44.29 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 13:09:45.74 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:09:45.84 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 13:09:46.01 +01:00 [Information] Request finished in 172.2376ms 200 
===> 2019-02-11 13:09:46.50 +01:00 [Warning] Failed to determine the https port for redirect.
===> 2019-02-11 13:09:47.81 +01:00 [Information] Route matched with "{action = \"Get\", controller = \"Values\"}". Executing action "VoucherService.Controllers.ValuesController.Get (VoucherService)"
===> 2019-02-11 13:09:47.83 +01:00 [Information] Executing action method "VoucherService.Controllers.ValuesController.Get (VoucherService)" - Validation state: Valid
===> 2019-02-11 13:09:47.83 +01:00 [Information] Executed action method "VoucherService.Controllers.ValuesController.Get (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 0.5889ms.
===> 2019-02-11 13:09:47.86 +01:00 [Information] Executing ObjectResult, writing value of type '"System.String[]"'.
===> 2019-02-11 13:09:47.88 +01:00 [Information] Executed action "VoucherService.Controllers.ValuesController.Get (VoucherService)" in 71.2552ms
===> 2019-02-11 13:09:47.91 +01:00 [Information] Request finished in 2172.4361ms 200 application/json; charset=utf-8
===> 2019-02-11 13:12:53.46 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekDEfkBgYuLYtester  
===> 2019-02-11 13:12:53.73 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 13:12:53.79 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekDEfkBgYuLYtester"]) - Validation state: Valid
===> 2019-02-11 13:13:27.68 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 33942.8583ms
===> 2019-02-11 13:13:27.75 +01:00 [Error] An unhandled exception has occurred while executing the request.
System.TimeoutException: A timeout occured after 30000ms selecting a server using CompositeServerSelector{ Selectors = MongoDB.Driver.MongoClient+AreSessionsSupportedServerSelector, LatencyLimitingServerSelector{ AllowedLatencyRange = 00:00:00.0150000 } }. Client view of cluster state is { ClusterId : "1", ConnectionMode : "Automatic", Type : "Unknown", State : "Disconnected", Servers : [{ ServerId: "{ ClusterId : 1, EndPoint : "Unspecified/localhost:27017" }", EndPoint: "Unspecified/localhost:27017", State: "Disconnected", Type: "Unknown", HeartbeatException: "MongoDB.Driver.MongoConnectionException: An exception occurred while opening a connection to the server. ---> System.Net.Internals.SocketExceptionFactory+ExtendedSocketException: No connection could be made because the target machine actively refused it [::1]:27017
   at System.Net.Sockets.Socket.EndConnect(IAsyncResult asyncResult)
   at System.Net.Sockets.Socket.<>c.<ConnectAsync>b__271_0(IAsyncResult iar)
--- End of stack trace from previous location where exception was thrown ---
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.ConnectAsync(Socket socket, EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.TcpStreamFactory.CreateStreamAsync(EndPoint endPoint, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at MongoDB.Driver.Core.Connections.BinaryConnection.OpenHelperAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Servers.ServerMonitor.HeartbeatAsync(CancellationToken cancellationToken)" }] }.
   at MongoDB.Driver.Core.Clusters.Cluster.ThrowTimeoutException(IServerSelector selector, ClusterDescription description)
   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedHelper.HandleCompletedTask(Task completedTask)
   at MongoDB.Driver.Core.Clusters.Cluster.WaitForDescriptionChangedAsync(IServerSelector selector, ClusterDescription description, Task descriptionChangedTask, TimeSpan timeout, CancellationToken cancellationToken)
   at MongoDB.Driver.Core.Clusters.Cluster.SelectServerAsync(IServerSelector selector, CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.AreSessionsSupportedAfterSeverSelctionAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.AreSessionsSupportedAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoClient.StartImplicitSessionAsync(CancellationToken cancellationToken)
   at MongoDB.Driver.MongoCollectionImpl`1.UsingImplicitSessionAsync[TResult](Func`2 funcAsync, CancellationToken cancellationToken)
   at MongoDB.Driver.IAsyncCursorSourceExtensions.SingleOrDefaultAsync[TDocument](IAsyncCursorSource`1 source, CancellationToken cancellationToken)
   at VoucherServiceBL.Repository.Mongo.MongoVoucherRepository.GetVoucherByCodeAsync(String code) in C:\Users\therapy\source\repos\VoucherService\VoucherServiceBL\Repository\Mongo\MongoVoucherRepository.cs:line 49
   at VoucherServiceBL.Service.BaseService.GetVoucherByCode(String code) in C:\Users\therapy\source\repos\VoucherService\VoucherServiceBL\Service\BaseService.cs:line 109
   at VoucherServiceBL.Service.BaseService.GetDiscountVoucher(String code) in C:\Users\therapy\source\repos\VoucherService\VoucherServiceBL\Service\BaseService.cs:line 427
   at VoucherService.Controllers.VoucherController.GetDiscountVoucher(String code) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Controllers\VoucherController.cs:line 79
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
===> 2019-02-11 13:13:28.72 +01:00 [Information] Request finished in 35261.4731ms 500 text/html; charset=utf-8
===> 2019-02-11 13:14:46.03 +01:00 [Information] 2 servers were removed due to timeout
===> 2019-02-11 13:19:07.37 +01:00 [Information] Request starting HTTP/1.1 POST http://localhost:63745/api/v1/ application/json 509
===> 2019-02-11 13:19:07.38 +01:00 [Information] Route matched with "{action = \"CreateVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.CreateVoucher (VoucherService)"
===> 2019-02-11 13:19:07.68 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.CreateVoucher (VoucherService)" with arguments (["VoucherServiceBL.Model.VoucherRequest"]) - Validation state: Valid
===> 2019-02-11 13:19:09.48 +01:00 [Information] Created 10: vouchers for "987654321" :VoucherGeneratedEvent { NumberGenerated: 10, VoucherCode: null, EventId: 5342e1b3-8029-47ad-abbe-6220599b8ec2, Message: "New Vouchers created", EventTime: 02/11/2019 13:19:09, MerchantId: "987654321", VoucherType: null }
===> 2019-02-11 13:19:09.49 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.CreateVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.CreatedAtActionResult" in 1811.5982ms.
===> 2019-02-11 13:19:09.49 +01:00 [Information] Executing ObjectResult, writing value of type '"<>f__AnonymousType0`2[[System.Nullable`1[[System.Int32, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]], System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[System.String, System.Private.CoreLib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]"'.
===> 2019-02-11 13:19:09.60 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.CreateVoucher (VoucherService)" in 2222.2942ms
===> 2019-02-11 13:19:09.60 +01:00 [Information] Request finished in 2231.8195ms 201 application/json; charset=utf-8
===> 2019-02-11 13:20:22.47 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/all?merchantId=987654321  
===> 2019-02-11 13:20:22.48 +01:00 [Information] Route matched with "{action = \"GetAllDiscountVouchers\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetAllDiscountVouchers (VoucherService)"
===> 2019-02-11 13:20:22.48 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetAllDiscountVouchers (VoucherService)" with arguments (["987654321"]) - Validation state: Valid
===> 2019-02-11 13:20:23.64 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetAllDiscountVouchers (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.OkObjectResult" in 1162.5365ms.
===> 2019-02-11 13:20:23.65 +01:00 [Information] Executing ObjectResult, writing value of type '"System.Collections.Generic.List`1[[VoucherServiceBL.Domain.Discount, VoucherServiceBL, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"'.
===> 2019-02-11 13:20:23.65 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetAllDiscountVouchers (VoucherService)" in 1174.3194ms
===> 2019-02-11 13:20:23.65 +01:00 [Information] Request finished in 1183.928ms 200 application/json; charset=utf-8
===> 2019-02-11 13:21:00.50 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekl3G8ZxA3vttester  
===> 2019-02-11 13:21:00.50 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 13:21:00.50 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekl3G8ZxA3vttester"]) - Validation state: Valid
===> 2019-02-11 13:21:00.66 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 156.1693ms.
===> 2019-02-11 13:21:00.66 +01:00 [Information] Executing ObjectResult, writing value of type '"VoucherServiceBL.Domain.Discount"'.
===> 2019-02-11 13:21:00.66 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 164.5892ms
===> 2019-02-11 13:21:00.67 +01:00 [Information] Request finished in 166.5966ms 200 application/json; charset=utf-8
===> 2019-02-11 13:26:50.12 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:26:52.36 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 13:26:52.78 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 13:26:52.81 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 13:26:52.82 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 13:26:52.82 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 13:26:52.82 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 13:26:52.82 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 13:26:52.82 +01:00 [Information]     Worker count: 10
===> 2019-02-11 13:26:52.82 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 13:26:52.82 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 13:26:52.82 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 13:26:54.42 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 13:26:54.42 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:26:54.52 +01:00 [Information] Request finished in 104.2165ms 200 
===> 2019-02-11 13:26:54.84 +01:00 [Warning] Failed to determine the https port for redirect.
===> 2019-02-11 13:26:55.55 +01:00 [Information] Route matched with "{action = \"Get\", controller = \"Values\"}". Executing action "VoucherService.Controllers.ValuesController.Get (VoucherService)"
===> 2019-02-11 13:26:55.57 +01:00 [Information] Executing action method "VoucherService.Controllers.ValuesController.Get (VoucherService)" - Validation state: Valid
===> 2019-02-11 13:26:55.57 +01:00 [Information] Executed action method "VoucherService.Controllers.ValuesController.Get (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 0.7228ms.
===> 2019-02-11 13:26:55.58 +01:00 [Information] Executing ObjectResult, writing value of type '"System.String[]"'.
===> 2019-02-11 13:26:55.60 +01:00 [Information] Executed action "VoucherService.Controllers.ValuesController.Get (VoucherService)" in 49.7811ms
===> 2019-02-11 13:26:55.61 +01:00 [Information] Request finished in 1197.0219ms 200 application/json; charset=utf-8
===> 2019-02-11 13:27:41.14 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekqn2nwQjBvUtester  
===> 2019-02-11 13:27:41.17 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 13:27:41.21 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekqn2nwQjBvUtester"]) - Validation state: Valid
===> 2019-02-11 13:27:42.45 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 1235.4146ms.
===> 2019-02-11 13:27:42.46 +01:00 [Information] Executing ObjectResult, writing value of type '"VoucherServiceBL.Domain.Discount"'.
===> 2019-02-11 13:27:42.47 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 1304.5363ms
===> 2019-02-11 13:27:42.49 +01:00 [Information] Request finished in 1347.066ms 200 application/json; charset=utf-8
===> 2019-02-11 13:31:00.68 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discountjekqn2nwQjBvUtester  
===> 2019-02-11 13:31:00.69 +01:00 [Information] Route matched with "{action = \"GetVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetVoucher (VoucherService)"
===> 2019-02-11 13:31:00.69 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetVoucher (VoucherService)" with arguments (["discountjekqn2nwQjBvUtester"]) - Validation state: Valid
===> 2019-02-11 13:31:01.17 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetVoucher (VoucherService)" in 476.9719ms
===> 2019-02-11 13:31:01.17 +01:00 [Error] An unhandled exception has occurred while executing the request.
System.NullReferenceException: Object reference not set to an instance of an object.
   at VoucherService.Controllers.VoucherController.GetVoucher(String code) in C:\Users\therapy\source\repos\VoucherService\VoucherService\Controllers\VoucherController.cs:line 61
   at lambda_method(Closure , Object )
   at Microsoft.Extensions.Internal.ObjectMethodExecutorAwaitable.Awaiter.GetResult()
   at Microsoft.AspNetCore.Mvc.Internal.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeActionMethodAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeNextActionFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.InvokeInnerFilterAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeNextResourceFilter()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeFilterPipelineAsync()
   at Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.InvokeAsync()
   at Microsoft.AspNetCore.Builder.RouterMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
===> 2019-02-11 13:31:01.94 +01:00 [Information] Request finished in 1264.3227ms 500 text/html; charset=utf-8
===> 2019-02-11 13:31:53.49 +01:00 [Information] 1 servers were removed due to timeout
===> 2019-02-11 13:39:56.17 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:40:34.13 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:40:37.05 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 13:40:40.04 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 13:40:40.09 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 13:40:40.10 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 13:40:40.10 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 13:40:40.10 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 13:40:40.10 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 13:40:40.10 +01:00 [Information]     Worker count: 10
===> 2019-02-11 13:40:40.10 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 13:40:40.10 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 13:40:40.10 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 13:40:40.89 +01:00 [Information] 1 servers were removed due to timeout
===> 2019-02-11 13:40:41.15 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:40:41.37 +01:00 [Warning] Failed to determine the https port for redirect.
===> 2019-02-11 13:40:42.29 +01:00 [Information] Route matched with "{action = \"Get\", controller = \"Values\"}". Executing action "VoucherService.Controllers.ValuesController.Get (VoucherService)"
===> 2019-02-11 13:40:42.30 +01:00 [Information] Executing action method "VoucherService.Controllers.ValuesController.Get (VoucherService)" - Validation state: Valid
===> 2019-02-11 13:40:42.30 +01:00 [Information] Executed action method "VoucherService.Controllers.ValuesController.Get (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 0.2908ms.
===> 2019-02-11 13:40:42.31 +01:00 [Information] Executing ObjectResult, writing value of type '"System.String[]"'.
===> 2019-02-11 13:40:42.37 +01:00 [Information] Executed action "VoucherService.Controllers.ValuesController.Get (VoucherService)" in 79.5665ms
===> 2019-02-11 13:40:42.38 +01:00 [Information] Request finished in 1226.1781ms 200 application/json; charset=utf-8
===> 2019-02-11 13:45:49.58 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 13:45:51.62 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 13:45:52.30 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 13:45:52.34 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 13:45:52.42 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 13:45:52.43 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 13:45:52.43 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 13:45:52.43 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 13:45:52.43 +01:00 [Information]     Worker count: 10
===> 2019-02-11 13:45:52.43 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 13:45:52.43 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 13:45:52.43 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 13:45:53.73 +01:00 [Information] 1 servers were removed due to timeout
===> 2019-02-11 13:45:57.92 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/values  
===> 2019-02-11 13:45:58.23 +01:00 [Information] Request starting HTTP/1.1 DEBUG http://localhost:63745/  0
===> 2019-02-11 13:45:59.12 +01:00 [Information] Request finished in 884.534ms 200 
===> 2019-02-11 13:45:59.22 +01:00 [Warning] Failed to determine the https port for redirect.
===> 2019-02-11 13:46:00.93 +01:00 [Information] Route matched with "{action = \"Get\", controller = \"Values\"}". Executing action "VoucherService.Controllers.ValuesController.Get (VoucherService)"
===> 2019-02-11 13:46:00.96 +01:00 [Information] Executing action method "VoucherService.Controllers.ValuesController.Get (VoucherService)" - Validation state: Valid
===> 2019-02-11 13:46:00.96 +01:00 [Information] Executed action method "VoucherService.Controllers.ValuesController.Get (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 0.6599ms.
===> 2019-02-11 13:46:00.98 +01:00 [Information] Executing ObjectResult, writing value of type '"System.String[]"'.
===> 2019-02-11 13:46:01.00 +01:00 [Information] Executed action "VoucherService.Controllers.ValuesController.Get (VoucherService)" in 63.8759ms
===> 2019-02-11 13:46:01.01 +01:00 [Information] Request finished in 3097.8235ms 200 application/json; charset=utf-8
===> 2019-02-11 13:46:02.58 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekqn2nwQjBvUtester  
===> 2019-02-11 13:46:02.67 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 13:46:02.78 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekqn2nwQjBvUtester"]) - Validation state: Valid
===> 2019-02-11 13:46:04.32 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 1535.3968ms.
===> 2019-02-11 13:46:04.34 +01:00 [Information] Executing ObjectResult, writing value of type '"VoucherServiceBL.Domain.Discount"'.
===> 2019-02-11 13:46:04.36 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 1681.6097ms
===> 2019-02-11 13:46:04.36 +01:00 [Information] Request finished in 1787.4944ms 200 application/json; charset=utf-8
===> 2019-02-11 13:46:55.69 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekqn2nwQjBvUtester  
===> 2019-02-11 13:46:55.69 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 13:46:55.69 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekqn2nwQjBvUtester"]) - Validation state: Valid
===> 2019-02-11 13:46:55.81 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 119.1419ms.
===> 2019-02-11 13:46:55.82 +01:00 [Information] Executing ObjectResult, writing value of type '"VoucherServiceBL.Domain.Discount"'.
===> 2019-02-11 13:46:55.82 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 125.1323ms
===> 2019-02-11 13:46:55.82 +01:00 [Information] Request finished in 127.8343ms 200 application/json; charset=utf-8
===> 2019-02-11 14:27:00.45 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 14:27:01.11 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 14:27:01.50 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 14:27:01.57 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 14:27:01.58 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 14:27:01.58 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 14:27:01.58 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 14:27:01.58 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 14:27:01.58 +01:00 [Information]     Worker count: 10
===> 2019-02-11 14:27:01.58 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 14:27:01.58 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 14:27:01.58 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 14:27:02.26 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekqn2nwQjBvUtester  
===> 2019-02-11 14:27:02.34 +01:00 [Warning] Failed to determine the https port for redirect.
===> 2019-02-11 14:27:02.54 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 14:27:02.59 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekqn2nwQjBvUtester"]) - Validation state: Valid
===> 2019-02-11 14:27:03.13 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 528.9217ms.
===> 2019-02-11 14:27:03.14 +01:00 [Information] Executing ObjectResult, writing value of type '"VoucherServiceBL.Domain.Discount"'.
===> 2019-02-11 14:27:03.18 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 633.2097ms
===> 2019-02-11 14:27:03.19 +01:00 [Information] Request finished in 931.0374ms 200 application/json; charset=utf-8
===> 2019-02-11 14:28:38.94 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekqn2nwQjBvUtester  
===> 2019-02-11 14:28:38.94 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 14:28:38.94 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekqn2nwQjBvUtester"]) - Validation state: Valid
===> 2019-02-11 14:28:38.97 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 26.2287ms.
===> 2019-02-11 14:28:38.97 +01:00 [Information] Executing ObjectResult, writing value of type '"VoucherServiceBL.Domain.Discount"'.
===> 2019-02-11 14:28:38.97 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 33.0105ms
===> 2019-02-11 14:28:38.97 +01:00 [Information] Request finished in 35.7291ms 200 application/json; charset=utf-8
===> 2019-02-11 14:32:02.08 +01:00 [Information] 1 servers were removed due to timeout
===> 2019-02-11 14:41:04.93 +01:00 [Information] Request starting HTTP/1.1 GET http://localhost:63745/api/v1/discount/jekqn2nwQjBvUtester  
===> 2019-02-11 14:41:04.93 +01:00 [Information] Route matched with "{action = \"GetDiscountVoucher\", controller = \"Voucher\"}". Executing action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)"
===> 2019-02-11 14:41:04.93 +01:00 [Information] Executing action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" with arguments (["jekqn2nwQjBvUtester"]) - Validation state: Valid
===> 2019-02-11 14:41:04.99 +01:00 [Information] Executed action method "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)", returned result "Microsoft.AspNetCore.Mvc.ObjectResult" in 62.5122ms.
===> 2019-02-11 14:41:04.99 +01:00 [Information] Executing ObjectResult, writing value of type '"VoucherServiceBL.Domain.Discount"'.
===> 2019-02-11 14:41:05.00 +01:00 [Information] Executed action "VoucherService.Controllers.VoucherController.GetDiscountVoucher (VoucherService)" in 63.7659ms
===> 2019-02-11 14:41:05.00 +01:00 [Information] Request finished in 65.0496ms 200 application/json; charset=utf-8
===> 2019-02-11 14:49:01.51 +01:00 [Information] User profile is available. Using '"C:\Users\therapy\AppData\Local\ASP.NET\DataProtection-Keys"' as key repository and Windows DPAPI to encrypt keys at rest.
===> 2019-02-11 14:49:02.14 +01:00 [Information] Start installing Hangfire SQL objects...
===> 2019-02-11 14:49:02.61 +01:00 [Information] Hangfire SQL objects installed.
===> 2019-02-11 14:49:02.64 +01:00 [Information] Starting Hangfire Server
===> 2019-02-11 14:49:02.64 +01:00 [Information] Using job storage: 'SQL Server: HangOrDie'
===> 2019-02-11 14:49:02.65 +01:00 [Information] Using the following options for SQL Server job storage:
===> 2019-02-11 14:49:02.65 +01:00 [Information]     Queue poll interval: 00:00:15.
===> 2019-02-11 14:49:02.65 +01:00 [Information] Using the following options for Hangfire Server:
===> 2019-02-11 14:49:02.65 +01:00 [Information]     Worker count: 10
===> 2019-02-11 14:49:02.66 +01:00 [Information]     Listening queues: 'default'
===> 2019-02-11 14:49:02.66 +01:00 [Information]     Shutdown timeout: 00:00:15
===> 2019-02-11 14:49:02.66 +01:00 [Information]     Schedule polling interval: 00:00:15
===> 2019-02-11 14:52:53.06 +01:00 [Information] Hangfire Server stopped.
